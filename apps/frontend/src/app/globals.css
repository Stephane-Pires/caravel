@import "tailwindcss";

@theme {
  --background-image-gradient-radial: radial-gradient(var(--tw-gradient-stops));
  --background-image-gradient-conic: conic-gradient(
    from 180deg at 50% 50%,
    var(--tw-gradient-stops)
  );

  --color-primary-100: #fdf7e9;
  --color-primary-200: #fcf5e2;
  --color-primary-300: #fbf2db;
  --color-primary-400: #fbf0d3;
  --color-primary-500: #faedcd;
  --color-primary-600: #f1ce73;
  --color-primary-700: #eec356;
  --color-primary-800: #e8ae1b;
  --color-primary-900: #b18412;

  --color-accent-100: #d3f9e1;
  --color-accent-200: #c2f7d6;
  --color-accent-300: #b1f5ca;
  --color-accent-400: #9ff3be;
  --color-accent-500: #86efac;
  --color-accent-600: #3fe67c;
  --color-accent-700: #1cd45f;
  --color-accent-800: #15a54a;
  --color-accent-900: #0f7635;

  --font-sans: var(--font-open-sans);
  --font-script: var(--font-merienda);
  --font-code: var(--font-mono-lisa-regular);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

/* Coupled to header height */
* {
  scroll-margin-top: 80px;
}

/* HACK UNTIL I MANAGE PROPERLY LIGHT-MODE using Tailwind */
/* If the user prefers dark mode, 
we of course apply color-scheme: dark, as usual */
@media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }
}

/* HACK UNTIL I MANAGE PROPERLY LIGHT-MODE using Tailwind */
/* If the user prefers light mode, 
we still enforce color-scheme: dark, despite the user preference */
@media (prefers-color-scheme: light) {
  html {
    color-scheme: dark;
  }
}

:root {
  --foreground-rgb: 255, 255, 255;
  --background-start-rgb: 15, 23, 42;
  --background-end-rgb: 15, 23, 42;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 15, 23, 42;
    --background-end-rgb: 15, 23, 42;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

/* Styling - rehypeKatex & remarkMath */
span.katex-html {
  display: none;
}

/* Styling - rehypeKatex & remarkMath */
span.katex-mathml {
  @apply text-xl text-blue-100;
}

/* Styling - rehypeKatex & remarkMath */
math {
  @apply m-4;
}

ul > li > ul > li > p {
  @apply m-0!;
}

ul > li > ul > li {
  @apply ml-2 list-image-[url(/logbook/mdx/minus-small.svg)] sm:ml-4;
}

/* Voir pour remplacer par ue implementation MDX avec les balises pre & code */
/* https://rehype-pretty-code.netlify.app/ */
pre {
  /* margin: 100px; */
  /* width: 90vw; */
  @apply m-4 w-[90vw] md:w-full;
}

/* https://rehype-pretty-code.netlify.app/ */
pre > code {
  display: grid;
  overflow-x: scroll;
  overflow-y: scroll;
  padding: 10px;
  @apply font-code text-sm sm:text-base;
}

/* https://rehype-pretty-code.netlify.app/ */
code {
  counter-reset: line;
}

/* https://rehype-pretty-code.netlify.app/ */
code > .line::before {
  counter-increment: line;
  content: counter(line);

  /* Other styling */
  display: inline-block;
  width: 1rem;
  margin-right: 2rem;
  text-align: right;
  color: gray;
}

/* https://rehype-pretty-code.netlify.app/ */
code[data-line-numbers-max-digits="2"] > .line::before {
  width: 2rem;
}

/* https://rehype-pretty-code.netlify.app/ */
code[data-line-numbers-max-digits="3"] > .line::before {
  width: 3rem;
}
